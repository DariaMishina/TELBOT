from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from config.bot_config import bot
from config.data_base import *
from keyboards import client_kb
from handlers import admin
from handlers.other_2 import chat_gpt, chat_gpt_category


def clear(user_id):
    db_update_time(user_id=user_id, time=None)
    db_update_ingredient(user_id=user_id, ingredient=None)
    db_update_dishes(user_id=user_id,dishes=None)
    db_update_category(user_id=user_id, category=None)
    
# –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–µ–Ω—é
async def setup_bot_commands(dp: Dispatcher):
    bot_commands = [
        types.BotCommand(command="/start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")
    ]
    await bot.set_my_commands(bot_commands)
    
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
async def start_handler(message: types.Message):
    # admin.PROMPT_LIST = ['','','','']
    us_id = message.from_user.id
    
    clear(user_id=us_id)
    
    if not user_exists(user_id=us_id):
        db_table_val(user_id=us_id)
    db_update_prompt(user_id=us_id, prompt=admin.PROMPT)
    
    print(get_db_all_value(us_id))
    
    greet_kb = client_kb.start_kb()
    await message.answer(f'üëã<b>–ü—Ä–∏–≤–µ—Ç!</b>\n'
                         f'–Ø –ø–æ–º–æ–≥—É –≤–∞–º –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π.\n'
                         f'–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å.', parse_mode='HTML',reply_markup=greet_kb)


async def process_callback(callback_query: types.CallbackQuery):
    # –û–±—Ä–∞–±–∞—Ç—ã–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É
    if callback_query.data in ["button1", "button6", "button8"]:
        await bot.send_message(callback_query.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏',reply_markup=client_kb.bld())
        # await admin.start_time('–ó–∞–¥–∞—Ç—å –≤—Ä–µ–º—è')
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
        
    elif callback_query.data in["button2", "button4", "button9"]:
        await bot.send_message(callback_query.message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–∏–¥–∏–µ–Ω—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä: –º—è—Å–æ, —Ä—ã–±–∞ –∏–ª–∏ —Ç–≤–æ—Ä–æ–≥')
        await admin.start_ingredient('–ó–∞–¥–∞—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç')
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
        
    elif callback_query.data in ["button3", "button5", "button7"]:
        await bot.send_message(callback_query.message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –±–ª—é–¥–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: –∫–∞—à–∞, –≤–µ—Ä–º–∏—à–µ–ª—å –∏–ª–∏ —â–∏')
        await admin.start_dishes('–ó–∞–¥–∞—Ç—å –≤—Ä–µ–º—è')
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
    
    # –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    elif callback_query.data == "button0":
        print(admin.prompt_create(user_id=callback_query.message.chat.id))
        
        if get_db_value(callback_query.message.chat.id, column='category') == None:
            await bot.send_message(callback_query.message.chat.id, text=chat_gpt(admin.prompt_create(user_id=callback_query.message.chat.id)))
        else:
            temp_category = ' '.join(get_db_value(callback_query.message.chat.id, column='category').split()[2:])
            db_update_category(callback_query.message.chat.id, None)
            print('–ó–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥–∞–µ—Ç—Å—è –≤ –±–æ—Ç–∞: ',admin.prompt_create(user_id=callback_query.message.chat.id))
            await bot.send_message(callback_query.message.chat.id, text=chat_gpt_category(admin.prompt_create(user_id=callback_query.message.chat.id), temp_category))
            print('–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π', temp_category)
            
        await bot.send_message(callback_query.message.chat.id, text=f'–•–æ—Ç–∏—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –µ—â—ë?', reply_markup=client_kb.start_kb())
        clear(user_id=callback_query.message.chat.id)
        print('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é')
        
    # –°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    elif callback_query.data == "button10":
        clear(user_id=callback_query.message.chat.id)
        await bot.send_message(callback_query.message.chat.id, text='–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π —Å–±—Ä–æ—à–µ–Ω. –•–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ?'\
            ,reply_markup=client_kb.start_kb())
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
        
    # –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    elif callback_query.data == "button11":
        await bot.send_message(callback_query.message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'\
            ,reply_markup=client_kb.category())
        await admin.start_category('–ó–∞–¥–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é')
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')
    
    # –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤—Ç—Ä–∞–∫\–æ–±–µ–¥\—É–∂–∏–Ω
    elif callback_query.data == "breakfast":
        db_update_time(user_id=callback_query.message.chat.id, time=' –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫')
        await bot.send_message(callback_query.message.chat.id, text=f'–û—Ç–ª–∏—á–Ω–æ! –í—Ä–µ–º—è –∑–∞–¥–∞–Ω–æ\n'
                         f"–í—Ä–µ–º—è: <i>–ó–∞–≤—Ç—Ä–∞–∫</i>\n"
                         f"<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å:</b> <i>{admin.prompt_create('user', user_id=callback_query.message.chat.id)}</i>"\
            ,reply_markup=client_kb.check_time(callback_query.message.chat.id), parse_mode='HTML')
       
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')

    elif callback_query.data == "lunch":
        db_update_time(user_id=callback_query.message.chat.id, time=' –Ω–∞ –æ–±–µ–¥')
        await bot.send_message(callback_query.message.chat.id, text=f'–û—Ç–ª–∏—á–Ω–æ! –í—Ä–µ–º—è –∑–∞–¥–∞–Ω–æ\n'
                         f"–í—Ä–µ–º—è: <i>–û–±–µ–¥</i>\n"
                         f"<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å:</b> <i>{admin.prompt_create('user',user_id=callback_query.message.chat.id)}</i>"\
            ,reply_markup=client_kb.check_time(callback_query.message.chat.id), parse_mode='HTML')
       
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')

    elif callback_query.data == "dinner":
        db_update_time(user_id=callback_query.message.chat.id, time=' –Ω–∞ —É–∂–∏–Ω')
        await bot.send_message(callback_query.message.chat.id, text=f'–û—Ç–ª–∏—á–Ω–æ! –í—Ä–µ–º—è –∑–∞–¥–∞–Ω–æ\n'
                         f"–í—Ä–µ–º—è: <i>–£–∂–∏–Ω</i>\n"
                         f"<b>–í–∞—à —Ç–µ–∫—É—â–∏–π –∑–∞–ø—Ä–æ—Å:</b> <i>{admin.prompt_create('user',user_id=callback_query.message.chat.id)}</i>"\
            ,reply_markup=client_kb.check_time(callback_query.message.chat.id), parse_mode='HTML')
        
        print('–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É')   
    

 

def register_handler_client(dp: Dispatcher):
    dp.register_message_handler(start_handler, commands=['start'])
    dp.register_callback_query_handler(process_callback)
